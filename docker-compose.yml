services:
  postgres:
    image: 'postgres:15.5'
    env_file: .env
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 1s
      timeout: 1s
      retries: 60
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql  
      - ./postgres-data:/var/lib/postgresql/data

  django:
    build: .
    command: sh -c "
      python3 manage.py makemigrations
      && python3 manage.py migrate
      && python manage.py loaddata -i ./fixture.json
      && gunicorn tgbot.wsgi:application --bind 0.0.0.0:8000"
    env_file: ./tgbot/.env
    ports:
      - "8000:8000"
    stop_signal: SIGINT
    volumes:
      - ./:/app
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
  
  bot:
    build: 
      dockerfile: Dockerfile.bot
    command: sh -c "python3 Bot/botik.py"
    env_file: ./Bot/.env
    stop_signal: SIGINT
    volumes:
      - ./:/app
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"